---
title: "Untitled"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

```{r}
#
health_animal_level<-events2|>
  filter(event_type %in% 'health')|>
  filter(!(is.na(id_animal)))|>
  filter(!(is.na(event)))|>
  arrange(id_animal, date_event)|>
  group_by(id_animal)|>
  summarize(list_events = paste0(event, collapse = ","),
            last_event = last(event),
         date_min = min(date_event),
         date_max = max(date_event)
         )|>
  ungroup() |> 
  filter(date_min> ymd("2023-01-01")
         )


animals <- read_parquet("data/intermediate_files/animals.parquet")

health_2 <- health_animal_level |> 
  left_join(animals |> select(id_animal, contains("died")
                              )
            ) |> 
  mutate(diff_last_event_died = as.numeric(date_died - date_max)
         )

plot <- health_2 |> 
  filter(!is.na(diff_last_event_died)) |> 
  ggplot(aes(x=diff_last_event_died))+
  geom_histogram(binwidth = 7)+
  facet_wrap(vars(last_event),
             scales = "free_y")

plot
# |>
  # select(id_animal, date_event,  event_ct_animal_txt)|>
  # distinct()|>
  # pivot_wider(names_from = event_ct_animal_txt, 
  #             values_from = date_event)|>
  # distinct()

write_parquet(health_animal_level, 'data/intermediate_files/health_events_wide.parquet')

```

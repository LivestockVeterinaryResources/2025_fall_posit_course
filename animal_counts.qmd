---
title: "Untitled"
format: html
---

```{r}
library(tidyverse)
library(arrow)

animals<-read_parquet('data/intermediate_files/animals.parquet')

animal_lactations<-read_parquet('data/intermediate_files/animal_lactations.parquet')

events<-read_parquet('data/intermediate_files/events_all_columns.parquet')

animal_event_existance<-read_parquet('data/intermediate_files/events_all_columns.parquet')%>%
  mutate(lact = parse_number(LACT))%>%
  group_by(id_animal)%>%
  summarize(location_event = paste0(sort(unique(location_event)), collapse = ','), 
            lact_min = min(lact), 
            lact_max = max(lact), 
            date_event_min = min(date_event, na.rm = TRUE), 
            date_event_max = max(date_event, na.rm = TRUE))%>%
  ungroup()

animal_params<-animals%>%
    left_join(animal_event_existance)%>%
  filter(str_detect(id_animal, '17182_04/28/14'))

check<-events%>%
  filter(str_detect(id_animal, '17182_04/28/14'))

```





```{r}

groupvar<-c('location_event')

time_frame<-seq.Date(from = events$date_event_min[[1]], to = events$date_event_max[[1]], 
                     by = denominator_granularity) #this variable is defined in step0_master_processing

master_counts<-NULL

#i=1
for (i in seq_along(time_frame)){
  df<-animal_params%>%
    mutate( ref_date = time_frame[[i]])%>%
    mutate(qc_present_from_birth = date_birth == date_event_min)%>%
    mutate(count = case_when(
       (date_archive<ref_date)~FALSE,
      (date_fresh<=ref_date)&(date_left>=ref_date)~TRUE, #logic for animal inclusion
      (date_fresh<=ref_date)&(is.na(date_archive))~TRUE,
     is.na(date_left)~TRUE,
      TRUE~FALSE
    ))
  
  df2<-df%>%
    group_by(location_event, lact_group_basic, ref_date)%>%
    summarize(ct_animals = sum(count))%>%
    ungroup()%>%
    filter(ct_animals>0)
  
  master_counts <- bind_rows(master_counts, df2)
            
}


```

```{r}
ggplot(master_counts)+
  geom_point(aes(x = ref_date, y = ct_animals, color = location_event))+
  facet_wrap(location_event~lact_group_basic, scales = 'free')

ggplot(master_counts)+
  geom_point(aes(x = ref_date, y = ct_animals, color = location_event))

check<-animals

```




---
title: "Parse Special Variables"
format: html
editor: visual
---

```{r}
library(tidyverse)
```


### QC Source Farms

```{r}
source('functions/fxn_sourcefarms.R') #custom function that parses cow id to identify source farm, it is farm specific
```


```{r, fig.show="hold", out.width="50%"}

if (dim(qc_source_farm)[1]<1){
  print('All Source Farms Mapped')
}else{
  ggplot(qc_source_farm)+
    geom_bar(aes(x = Protocols, y = count), stat = 'identity', fill = 'red')+
    facet_wrap(Event~., scales = 'free')
}

summarize_source_farm<-events2|>
         mutate(year = year(date_event))|>
         group_by(source_farm, source_state, year)|>
         summarize(count_id_animal = n_distinct(id_animal))|>
         ungroup()

list_source_states<-sort(unique(events2$source_state))

#i=1
for (i in seq_along(list_source_states)){
p<-ggplot(summarize_source_farm|>filter(source_state %in% list_source_states[i]))+ 
  geom_bar(aes(x = source_farm, y = count_id_animal, fill = factor(year)), 
           stat = 'identity', position = position_dodge(width = 0.8, preserve = "single"))+
  theme_bw()+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  labs(title = paste0(list_source_states[i]), 
       fill = 'Year')+
  scale_fill_manual(values =c('#ffff99','#a6cee3','#b2df8a','#fb9a99','#fdbf6f','#cab2d6',
                              '#b15928', '#1f78b4','#33a02c','#e31a1c','#ff7f00','#6a3d9a'))
print(p)
}


```
```


